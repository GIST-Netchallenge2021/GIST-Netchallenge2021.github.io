---
layout: post
title:  "21.07.02(Fri)"
subtitle:
categories: til
tags: 
comments: true
header-img: 
---
# 세연
## 오늘 목표
	- [스프링 입문 - 코드로 배우는 스프링 부트, 웹 MVC, DB 접근 기술] 강의 완강하기

### 사용자에게 화면을 뿌려주는 방법 3가지
1. 정적 컨텐츠 : 서버에 저장되어 있는 html 파일을 그대로 뿌려주는 방법. 서버에서 별다른 프로그래밍을 하지 않음.
2. MVC와 템플릿 엔진 : 템플릿 엔진을 이용해 서버에서 프로그래밍을 한 후, 변환된 결과물 html 파일을 뿌려주는 방법.
3. API : json 파일 등을 이용해 데이터만을 전달하는 방법.



### url로 파라미터 전달 방법과 전달된 파라미터가 controller에서 처리되는 과정
url에 ? 이후 파라미터의 key 값= 파라미터의 value 값 으로 쓰면 파라미터를 전달할 수 있다.   
예시 : http://localhost:8080/hello-mvc?name=seyeon!! (key : name, value : seyeon!! 이다.)  
해당 url에 매핑된 컨트롤러는 model에 해당 파라미터를 추가한다.
>컨트롤러 예시:  
@GetMapping("hello-mvc")  
public String helloMvc(@RequestParam("name") String n, Model model){  
model.addAttribute("name", n);  
return "hello-template";  
}
### API 방식으로 데이터를 전달
![API 전달 방식](https://gist-netchallenge2021.github.io/assets/img/progress/seyeon/2.png)
1. @GetMapping 다음에 @ResponseBody를 쓰면 컨트롤러가 view가 아닌 http body에 데이터를 전달한다.
2. 컨트롤러는 return 값으로 객체를 전달할 수 있는데, 이 때, 스프링은 별다른 것을 하지 않으면 기본적으로 객체를 json형식으로 변환하여 json을 클라이언트에 전달하게 된다. 이 때 객체를 json으로 변환하기 위해 HttpMessageConverter라는 컨버터 등이 동작하게 된다.

### thymeleaf 기능
> `<p th:text="'hello ' + ${name}">hello! empty</p>`

위 문장을 서버를 거쳐 실행한 경우 **hello + (넣은 name값)** 이 출력이 되고,
서버 없이 실행하는 경우 **hello! empty**가 출력이 된다.

# 준희
생활코딩 javascript 강의 전체, 서점에서 코어 자바스크립트 책을 구해 공부하도록 하겠습니다.

# 건호

# 진영

# 형록

# 효인
